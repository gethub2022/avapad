{"version":3,"file":"index.min.js","mappings":"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","sources":["webpack://\"@gnosis.pm/safe-react-gateway-sdk\"/webpack/universalModuleDefinition","webpack://\"@gnosis.pm/safe-react-gateway-sdk\"/./node_modules/isomorphic-unfetch/browser.js","webpack://\"@gnosis.pm/safe-react-gateway-sdk\"/./node_modules/unfetch/dist/unfetch.module.js","webpack://\"@gnosis.pm/safe-react-gateway-sdk\"/webpack/bootstrap","webpack://\"@gnosis.pm/safe-react-gateway-sdk\"/webpack/runtime/compat get default export","webpack://\"@gnosis.pm/safe-react-gateway-sdk\"/webpack/runtime/define property getters","webpack://\"@gnosis.pm/safe-react-gateway-sdk\"/webpack/runtime/hasOwnProperty shorthand","webpack://\"@gnosis.pm/safe-react-gateway-sdk\"/webpack/runtime/make namespace object","webpack://\"@gnosis.pm/safe-react-gateway-sdk\"/./src/types/safe-apps.ts","webpack://\"@gnosis.pm/safe-react-gateway-sdk\"/./src/types/transactions.ts","webpack://\"@gnosis.pm/safe-react-gateway-sdk\"/./src/types/chains.ts","webpack://\"@gnosis.pm/safe-react-gateway-sdk\"/./src/utils.ts","webpack://\"@gnosis.pm/safe-react-gateway-sdk\"/./src/endpoint.ts","webpack://\"@gnosis.pm/safe-react-gateway-sdk\"/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"\\\"@gnosis.pm/safe-react-gateway-sdk\\\"\"] = factory();\n\telse\n\t\troot[\"\\\"@gnosis.pm/safe-react-gateway-sdk\\\"\"] = factory();\n})(self, function() {\nreturn ","module.exports = self.fetch || (self.fetch = require('unfetch').default || require('unfetch'));\n","export default function(e,n){return n=n||{},new Promise(function(t,r){var s=new XMLHttpRequest,o=[],u=[],i={},a=function(){return{ok:2==(s.status/100|0),statusText:s.statusText,status:s.status,url:s.responseURL,text:function(){return Promise.resolve(s.responseText)},json:function(){return Promise.resolve(s.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([s.response]))},clone:a,headers:{keys:function(){return o},entries:function(){return u},get:function(e){return i[e.toLowerCase()]},has:function(e){return e.toLowerCase()in i}}}};for(var l in s.open(n.method||\"get\",e,!0),s.onload=function(){s.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,function(e,n,t){o.push(n=n.toLowerCase()),u.push([n,t]),i[n]=i[n]?i[n]+\",\"+t:t}),t(a())},s.onerror=r,s.withCredentials=\"include\"==n.credentials,n.headers)s.setRequestHeader(l,n.headers[l]);s.send(n.body||null)})}\n//# sourceMappingURL=unfetch.module.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export enum SafeAppAccessPolicyTypes {\n  NoRestrictions = 'NO_RESTRICTIONS',\n  DomainAllowlist = 'DOMAIN_ALLOWLIST',\n}\n\nexport type SafeAppNoRestrictionsPolicy = {\n  type: SafeAppAccessPolicyTypes.NoRestrictions\n}\n\nexport type SafeAppDomainAllowlistPolicy = {\n  type: SafeAppAccessPolicyTypes.DomainAllowlist\n  value: string[]\n}\n\nexport type SafeAppsAccessControlPolicies = SafeAppNoRestrictionsPolicy | SafeAppDomainAllowlistPolicy\n\nexport type SafeAppProvider = {\n  url: string\n  name: string\n}\n\nexport type SafeAppData = {\n  id: number\n  url: string\n  name: string\n  iconUrl: string\n  description: string\n  chainIds: string[]\n  provider?: SafeAppProvider\n  accessControl: SafeAppsAccessControlPolicies\n}\n\nexport type SafeAppsResponse = SafeAppData[]\n","export type ParamValue = string | ParamValue[]\n\nexport enum Operation {\n  CALL = 0,\n  DELEGATE = 1,\n}\n\nexport type InternalTransaction = {\n  operation: Operation\n  to: string\n  value: string | null\n  data: string | null\n  dataDecoded: DataDecoded | null\n}\n\nexport type ValueDecodedType = InternalTransaction[]\n\nexport type Parameter = {\n  name: string\n  type: string\n  value: ParamValue\n  valueDecoded: ValueDecodedType | null\n}\n\nexport type DataDecoded = {\n  method: string\n  parameters: Parameter[] | null\n}\n\nexport type AddressEx = {\n  value: string\n  name: string | null\n  logoUri: string | null\n}\n\nexport enum TransactionStatus {\n  AWAITING_CONFIRMATIONS = 'AWAITING_CONFIRMATIONS',\n  AWAITING_EXECUTION = 'AWAITING_EXECUTION',\n  CANCELLED = 'CANCELLED',\n  FAILED = 'FAILED',\n  SUCCESS = 'SUCCESS',\n  PENDING = 'PENDING',\n  WILL_BE_REPLACED = 'WILL_BE_REPLACED',\n}\n\nexport enum TransferDirection {\n  INCOMING = 'INCOMING',\n  OUTGOING = 'OUTGOING',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport enum TokenType {\n  ERC20 = 'ERC20',\n  ERC721 = 'ERC721',\n  NATIVE_COIN = 'NATIVE_COIN',\n}\n\nexport type Erc20Transfer = {\n  type: TokenType.ERC20\n  tokenAddress: string\n  tokenName: string | null\n  tokenSymbol: string | null\n  logoUri: string | null\n  decimals: number | null\n  value: string\n}\n\nexport type Erc721Transfer = {\n  type: TokenType.ERC721\n  tokenAddress: string\n  tokenId: string\n  tokenName: string | null\n  tokenSymbol: string | null\n  logoUri: string | null\n}\n\nexport type NativeCoinTransfer = {\n  type: TokenType.NATIVE_COIN\n  value: string\n}\n\nexport type TransferInfo = Erc20Transfer | Erc721Transfer | NativeCoinTransfer\n\nexport interface Transfer {\n  type: 'Transfer'\n  sender: AddressEx\n  recipient: AddressEx\n  direction: TransferDirection\n  transferInfo: TransferInfo\n}\n\nexport type SetFallbackHandler = {\n  type: 'SET_FALLBACK_HANDLER'\n  handler: AddressEx\n}\n\nexport type AddOwner = {\n  type: 'ADD_OWNER'\n  owner: AddressEx\n  threshold: number\n}\n\nexport type RemoveOwner = {\n  type: 'REMOVE_OWNER'\n  owner: AddressEx\n  threshold: number\n}\n\nexport type SwapOwner = {\n  type: 'SWAP_OWNER'\n  oldOwner: AddressEx\n  newOwner: AddressEx\n}\n\nexport type ChangeThreshold = {\n  type: 'CHANGE_THRESHOLD'\n  threshold: number\n}\n\nexport type ChangeImplementation = {\n  type: 'CHANGE_IMPLEMENTATION'\n  implementation: AddressEx\n}\n\nexport type EnableModule = {\n  type: 'ENABLE_MODULE'\n  module: AddressEx\n}\n\nexport type DisableModule = {\n  type: 'DISABLE_MODULE'\n  module: AddressEx\n}\n\nexport type SettingsInfo =\n  | SetFallbackHandler\n  | AddOwner\n  | RemoveOwner\n  | SwapOwner\n  | ChangeThreshold\n  | ChangeImplementation\n  | EnableModule\n  | DisableModule\n\nexport type SettingsChange = {\n  type: 'SettingsChange'\n  dataDecoded: DataDecoded\n  settingsInfo: SettingsInfo | null\n}\n\nexport interface Custom {\n  type: 'Custom'\n  to: AddressEx\n  dataSize: string\n  value: string\n  methodName: string | null\n  actionCount: number | null\n  isCancellation: boolean\n}\n\nexport type MultiSend = {\n  type: 'Custom'\n  to: AddressEx\n  dataSize: string\n  value: string\n  methodName: 'multiSend'\n  actionCount: number\n  isCancellation: boolean\n}\n\nexport type Creation = {\n  type: 'Creation'\n  creator: AddressEx\n  transactionHash: string\n  implementation: AddressEx | null\n  factory: AddressEx | null\n}\n\nexport type TransactionInfo = Transfer | SettingsChange | Custom | MultiSend | Creation\n\nexport type ModuleExecutionInfo = {\n  type: 'MODULE'\n  address: AddressEx\n}\n\nexport type MultisigExecutionInfo = {\n  type: 'MULTISIG'\n  nonce: number\n  confirmationsRequired: number\n  confirmationsSubmitted: number\n  missingSigners: AddressEx[] | null\n}\n\nexport type ExecutionInfo = ModuleExecutionInfo | MultisigExecutionInfo\n\nexport type TransactionSummary = {\n  id: string\n  timestamp: number\n  txStatus: TransactionStatus\n  txInfo: TransactionInfo\n  executionInfo?: ExecutionInfo\n  safeAppInfo?: SafeAppInfo\n}\n\nexport type Transaction = {\n  transaction: TransactionSummary\n  conflictType: 'None' | 'HasNext' | 'End'\n  type: 'TRANSACTION'\n}\n\nexport type DateLabel = {\n  timestamp: number\n  type: 'DATE_LABEL'\n}\n\nexport type Label = {\n  label: string\n  type: 'LABEL'\n}\n\nexport type ConflictHeader = {\n  nonce: number\n  type: 'CONFLICT_HEADER'\n}\n\nexport type TransactionListItem = Transaction | Label | ConflictHeader\n\ntype Page<T> = {\n  next?: string\n  previous?: string\n  results: Array<T>\n}\n\nexport type TransactionListPage = Page<TransactionListItem>\n\nexport type MultisigTransactionRequest = {\n  to: string\n  value: string\n  data: string | null\n  nonce: string\n  operation: Operation\n  safeTxGas: string\n  baseGas: string\n  gasPrice: string\n  gasToken: string\n  refundReceiver: string | null\n  safeTxHash: string\n  sender: string\n  signature?: string | null\n  origin: string | null\n}\n\n/* Transaction details types */\nexport type SafeAppInfo = {\n  name: string\n  url: string\n  logoUri: string\n}\n\nexport type TransactionData = {\n  hexData: string | null\n  dataDecoded: DataDecoded | null\n  to: AddressEx\n  value: string | null\n  operation: Operation\n  addressInfoIndex: { [key: string]: AddressEx } | null\n  trustedDelegateCallTarget: boolean\n}\n\nexport type ModuleExecutionDetails = {\n  type: 'MODULE'\n  address: AddressEx\n}\n\nexport type MultisigConfirmation = {\n  signer: AddressEx\n  signature: string | null\n  submittedAt: number\n}\n\nexport type TokenInfo = {\n  type: TokenType\n  address: string\n  decimals: number\n  symbol: string\n  name: string\n  logoUri: string | null\n}\n\nexport type MultisigExecutionDetails = {\n  type: 'MULTISIG'\n  submittedAt: number\n  nonce: number\n  safeTxGas: string\n  baseGas: string\n  gasPrice: string\n  gasToken: string\n  refundReceiver: AddressEx\n  safeTxHash: string\n  executor: AddressEx | null\n  signers: AddressEx[]\n  confirmationsRequired: number\n  confirmations: MultisigConfirmation[]\n  rejectors: AddressEx[] | null\n  gasTokenInfo: TokenInfo | null\n}\n\nexport type DetailedExecutionInfo = ModuleExecutionDetails | MultisigExecutionDetails\n\nexport type TransactionDetails = {\n  txId: string\n  executedAt: number | null\n  txStatus: TransactionStatus\n  txInfo: TransactionInfo\n  txData: TransactionData | null\n  detailedExecutionInfo: DetailedExecutionInfo | null\n  txHash: string | null\n  safeAppInfo: SafeAppInfo | null\n}\n\n/* Transaction details types end */\n\n/* Transaction estimation types */\n\nexport type SafeTransactionEstimationRequest = {\n  to: string\n  value: string\n  data: string\n  operation: Operation\n}\n\n// CGW v2 response\nexport type SafeTransactionEstimation = {\n  currentNonce: number\n  recommendedNonce: number\n  safeTxGas: string\n}\n\n/* Transaction estimation types end */\n","export enum RPC_AUTHENTICATION {\n  API_KEY_PATH = 'API_KEY_PATH',\n  NO_AUTHENTICATION = 'NO_AUTHENTICATION',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport type RpcUri = {\n  authentication: RPC_AUTHENTICATION\n  value: string\n}\n\nexport type BlockExplorerUriTemplate = {\n  address: string\n  txHash: string\n  api: string\n}\n\nexport type NativeCurrency = {\n  name: string\n  symbol: string\n  decimals: number\n  logoUri: string\n}\n\nexport type Theme = {\n  textColor: string\n  backgroundColor: string\n}\n\nexport enum GAS_PRICE_TYPE {\n  ORACLE = 'ORACLE',\n  FIXED = 'FIXED',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport type GasPriceOracle = {\n  type: GAS_PRICE_TYPE.ORACLE\n  uri: string\n  gasParameter: string\n  gweiFactor: string\n}\n\nexport type GasPriceFixed = {\n  type: GAS_PRICE_TYPE.FIXED\n  weiValue: string\n}\n\nexport type GasPriceUnknown = {\n  type: GAS_PRICE_TYPE.UNKNOWN\n}\n\nexport type GasPrice = (GasPriceOracle | GasPriceFixed | GasPriceUnknown)[]\n\nexport enum FEATURES {\n  ERC721 = 'ERC721',\n  SAFE_APPS = 'SAFE_APPS',\n  CONTRACT_INTERACTION = 'CONTRACT_INTERACTION',\n  DOMAIN_LOOKUP = 'DOMAIN_LOOKUP',\n  SPENDING_LIMIT = 'SPENDING_LIMIT',\n  EIP1559 = 'EIP1559',\n  SAFE_TX_GAS_OPTIONAL = 'SAFE_TX_GAS_OPTIONAL',\n}\n\n// Remain agnostic as possible and reference what is returned in the CGW, i.e.\n// https://gnosis.github.io/safe-client-gateway/docs/routes/chains/models/struct.ChainInfo.html\nexport type ChainInfo = {\n  transactionService: string\n  chainId: string // Restricted by what is returned by the CGW\n  chainName: string\n  shortName: string\n  l2: boolean\n  description: string\n  rpcUri: RpcUri\n  safeAppsRpcUri: RpcUri\n  publicRpcUri: RpcUri\n  blockExplorerUriTemplate: BlockExplorerUriTemplate\n  nativeCurrency: NativeCurrency\n  theme: Theme\n  ensRegistryAddress?: string\n  gasPrice: GasPrice\n  disabledWallets: string[]\n  features: FEATURES[]\n}\n\nexport type ChainListResponse = {\n  next: string | null\n  previous: string | null\n  results: ChainInfo[]\n}\n","import fetch from 'isomorphic-unfetch'\n\nexport type Params = Record<string, string | number | boolean | null>\n\nexport type ErrorResponse = {\n  code: number\n  message: string\n}\n\nfunction replaceParam(str: string, key: string, value: string): string {\n  return str.replace(new RegExp(`\\\\{${key}\\\\}`, 'g'), value)\n}\n\nexport function insertParams(template: string, params?: Params): string {\n  return params\n    ? Object.keys(params).reduce((result: string, key) => {\n        return replaceParam(result, key, String(params[key]))\n      }, template)\n    : template\n}\n\nexport function stringifyQuery(query?: Params): string {\n  if (!query) {\n    return ''\n  }\n\n  const searchParams = new URLSearchParams()\n  Object.keys(query).forEach((key) => {\n    if (query[key] != null) {\n      searchParams.append(key, String(query[key]))\n    }\n  })\n  const searchString = searchParams.toString()\n  return searchString ? `?${searchString}` : ''\n}\n\nexport async function fetchData<T>(url: string, body?: unknown): Promise<T> {\n  let options:\n    | {\n        method: 'POST'\n        headers: Record<string, string>\n        body: string\n      }\n    | undefined\n  if (body != null) {\n    options = {\n      method: 'POST',\n      body: typeof body === 'string' ? body : JSON.stringify(body),\n      headers: { 'Content-Type': 'application/json' },\n    }\n  }\n\n  const resp = await fetch(url, options)\n  const json = await resp.json()\n\n  if (!resp.ok) {\n    let errTxt = ''\n    try {\n      const err = json as ErrorResponse\n      errTxt = `${err.code}: ${err.message}`\n    } catch (e) {\n      errTxt = resp.statusText\n    }\n    throw new Error(errTxt)\n  }\n\n  return json\n}\n","import { fetchData, insertParams, stringifyQuery } from './utils'\nimport { paths } from './types/api'\n\ntype Primitive = string | number | boolean | null\n\ninterface Params {\n  path?: { [key: string]: Primitive }\n  query?: { [key: string]: Primitive }\n  body?: unknown\n}\n\nexport function callEndpoint<T extends keyof paths>(\n  baseUrl: string,\n  path: T,\n  parameters?: paths[T]['get']['parameters'],\n  rawUrl?: string,\n): Promise<paths[T]['get']['responses'][200]['schema']> {\n  if (rawUrl) {\n    return fetchData(rawUrl)\n  }\n\n  const params = parameters as Params\n  const pathname = insertParams(path, params?.path)\n  const search = stringifyQuery(params?.query)\n  const url = `${baseUrl}${pathname}${search}`\n\n  return fetchData(url, params?.body)\n}\n","import { callEndpoint } from './endpoint'\nimport { operations } from './types/api'\nimport { SafeTransactionEstimation, TransactionDetails, TransactionListPage } from './types/transactions'\nimport { FiatCurrencies, OwnedSafes, SafeBalanceResponse, SafeCollectibleResponse, SafeInfo } from './types/common'\nimport { ChainListResponse, ChainInfo } from './types/chains'\nimport { SafeAppsResponse } from './types/safe-apps'\nimport { MasterCopyReponse } from './types/master-copies'\nimport { DecodedDataResponse } from './types/decoded-data'\nexport * from './types/safe-apps'\nexport * from './types/transactions'\nexport * from './types/chains'\nexport * from './types/common'\nexport * from './types/master-copies'\nexport * from './types/decoded-data'\n\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\n/**\n * Get basic information about a Safe. E.g. owners, modules, version etc\n */\nexport function getSafeInfo(baseUrl: string, chainId: string, address: string): Promise<SafeInfo> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}/safes/{address}', { path: { chainId, address } })\n}\n\n/**\n * Get the total balance and all assets stored in a Safe\n */\nexport function getBalances(\n  baseUrl: string,\n  chainId: string,\n  address: string,\n  currency = 'usd',\n  query: operations['safes_balances_list']['parameters']['query'] = {},\n): Promise<SafeBalanceResponse> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}/safes/{address}/balances/{currency}', {\n    path: { chainId, address, currency },\n    query,\n  })\n}\n\n/**\n * Get a list of supported fiat currencies (e.g. USD, EUR etc)\n */\nexport function getFiatCurrencies(baseUrl: string): Promise<FiatCurrencies> {\n  return callEndpoint(baseUrl, '/v1/balances/supported-fiat-codes')\n}\n\n/**\n * Get the addresses of all Safes belonging to an owner\n */\nexport function getOwnedSafes(baseUrl: string, chainId: string, address: string): Promise<OwnedSafes> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}/owners/{address}/safes', { path: { chainId, address } })\n}\n\n/**\n * Get NFTs stored in a Safe\n */\nexport function getCollectibles(\n  baseUrl: string,\n  chainId: string,\n  address: string,\n  query: operations['safes_collectibles_list']['parameters']['query'] = {},\n): Promise<SafeCollectibleResponse[]> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}/safes/{address}/collectibles', {\n    path: { chainId, address },\n    query,\n  })\n}\n\n/**\n * Get a list of past Safe transactions\n */\nexport function getTransactionHistory(\n  baseUrl: string,\n  chainId: string,\n  address: string,\n  pageUrl?: string,\n): Promise<TransactionListPage> {\n  return callEndpoint(\n    baseUrl,\n    '/v1/chains/{chainId}/safes/{safe_address}/transactions/history',\n    { path: { chainId, safe_address: address }, query: {} },\n    pageUrl,\n  )\n}\n\n/**\n * Get the list of pending transactions\n */\nexport function getTransactionQueue(\n  baseUrl: string,\n  chainId: string,\n  address: string,\n  pageUrl?: string,\n): Promise<TransactionListPage> {\n  return callEndpoint(\n    baseUrl,\n    '/v1/chains/{chainId}/safes/{safe_address}/transactions/queued',\n    { path: { chainId, safe_address: address }, query: {} },\n    pageUrl,\n  )\n}\n\n/**\n * Get the details of an individual transaction by its id\n */\nexport function getTransactionDetails(\n  baseUrl: string,\n  chainId: string,\n  transactionId: string,\n): Promise<TransactionDetails> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}/transactions/{transactionId}', {\n    path: { chainId, transactionId },\n  })\n}\n\n/**\n * Request a gas estimate & recommmended tx nonce for a created transaction\n */\nexport function postSafeGasEstimation(\n  baseUrl: string,\n  chainId: string,\n  address: string,\n  body: operations['post_safe_gas_estimation']['parameters']['body'],\n): Promise<SafeTransactionEstimation> {\n  return callEndpoint(baseUrl, '/v2/chains/{chainId}/safes/{safe_address}/multisig-transactions/estimations', {\n    path: { chainId, safe_address: address },\n    body,\n  })\n}\n\n/**\n * Propose a new transaction for other owners to sign/execute\n */\nexport function proposeTransaction(\n  baseUrl: string,\n  chainId: string,\n  address: string,\n  body: operations['propose_transaction']['parameters']['body'],\n): Promise<TransactionDetails> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}/transactions/{safe_address}/propose', {\n    path: { chainId, safe_address: address },\n    body,\n  })\n}\n\n/**\n * Returns all defined chain configs\n */\nexport function getChainsConfig(\n  baseUrl: string,\n  query?: operations['chains_list']['parameters']['query'],\n): Promise<ChainListResponse> {\n  return callEndpoint(baseUrl, '/v1/chains', {\n    query,\n  })\n}\n\n/**\n * Returns a chain config\n */\nexport function getChainConfig(baseUrl: string, chainId: string): Promise<ChainInfo> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}', {\n    path: { chainId: chainId },\n  })\n}\n\n/**\n * Returns Safe Apps List\n */\nexport function getSafeApps(\n  baseUrl: string,\n  chainId: string,\n  query: operations['safe_apps_read']['parameters']['query'] = {},\n): Promise<SafeAppsResponse> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}/safe-apps', {\n    path: { chainId: chainId },\n    query,\n  })\n}\n\n/**\n * Returns list of Master Copies\n */\nexport function getMasterCopies(baseUrl: string, chainId: string): Promise<MasterCopyReponse> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}/about/master-copies', {\n    path: { chainId: chainId },\n  })\n}\n\n/**\n * Returns decoded data\n */\nexport function getDecodedData(\n  baseUrl: string,\n  chainId: string,\n  encodedData: operations['data_decoder']['parameters']['body']['data'],\n): Promise<DecodedDataResponse> {\n  return callEndpoint(baseUrl, '/v1/chains/{chainId}/data-decoder', {\n    path: { chainId: chainId },\n    body: { data: encodedData },\n  })\n}\n/* eslint-enable @typescript-eslint/explicit-module-boundary-types */\n"],"names":["root","factory","exports","module","define","amd","self","fetch","e","n","Promise","t","r","s","XMLHttpRequest","o","u","i","a","ok","status","statusText","url","responseURL","text","resolve","responseText","json","then","JSON","parse","blob","Blob","response","clone","headers","keys","entries","get","toLowerCase","has","l","open","method","onload","getAllResponseHeaders","replace","push","onerror","withCredentials","credentials","setRequestHeader","send","body","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","d","definition","key","Object","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","SafeAppAccessPolicyTypes","Operation","TransactionStatus","TransferDirection","TokenType","RPC_AUTHENTICATION","GAS_PRICE_TYPE","FEATURES","fetchData","options","stringify","resp","errTxt","err","code","message","Error","callEndpoint","baseUrl","path","parameters","rawUrl","params","template","reduce","result","str","RegExp","replaceParam","String","insertParams","query","searchParams","URLSearchParams","forEach","append","searchString","toString","stringifyQuery","getSafeInfo","chainId","address","getBalances","currency","getFiatCurrencies","getOwnedSafes","getCollectibles","getTransactionHistory","pageUrl","safe_address","getTransactionQueue","getTransactionDetails","transactionId","postSafeGasEstimation","proposeTransaction","getChainsConfig","getChainConfig","getSafeApps","getMasterCopies","getDecodedData","encodedData","data"],"sourceRoot":""}